> 本文由 [简悦 SimpRead](http://ksria.com/simpread/) 转码， 原文地址 [mp.weixin.qq.com](https://mp.weixin.qq.com/s/hhqSTKwzM2rBvPO_wYi6UA)

PDF（Portable Document Format）是一种广泛使用的文档格式，它允许用户在各种设备和操作系统上保持文档的原始格式和布局。在 C# 中，处理 PDF 文档通常需要借助第三方库，因为. NET 框架本身并不直接支持 PDF 的读写。本文将介绍如何使用 C# 和合适的库来读取 PDF 文档中的文本和图片。

一、读取 PDF 中的文本

为了读取 PDF 中的文本，我们可以使用诸如 iTextSharp 或 PdfSharp 等库。这些库提供了处理 PDF 文档所需的功能，包括提取文本内容。

以下是一个使用 iTextSharp 库读取 PDF 中文本的简单示例：

首先，你需要安装 iTextSharp 库。你可以通过 NuGet 包管理器来安装它。在 Visual Studio 中，右键点击你的项目 -> 选择 “管理 NuGet 程序包” -> 搜索 “iTextSharp” -> 点击 “安装”。

安装完成后，你可以使用以下代码来读取 PDF 中的文本：

```
using System;using System.IO;using iTextSharp.text.pdf;using iTextSharp.text.pdf.parser;namespace PdfTextExtractor{    class Program    {        static void Main(string[] args)        {            string pdfPath = @"path\to\your\pdf\file.pdf"; // 替换为你的PDF文件路径            PdfReader reader = new PdfReader(pdfPath);            for (int page = 1; page <= reader.NumberOfPages; page++)            {                ITextExtractionStrategy strategy = new SimpleTextExtractionStrategy();                string currentText = PdfTextExtractor.GetTextFromPage(reader, page, strategy);                currentText = Encoding.UTF8.GetString(ASCIIEncoding.Convert(Encoding.Default, Encoding.UTF8, Encoding.Default.GetBytes(currentText)));                Console.WriteLine(currentText);            }            reader.Close();        }    }}
```

这段代码创建了一个`PdfReader`对象来读取 PDF 文件，并使用`PdfTextExtractor`类来提取每一页的文本。`SimpleTextExtractionStrategy`是一个简单的策略，用于提取文本。提取到的文本会被输出到控制台。

二、读取 PDF 中的图片

读取 PDF 中的图片通常比提取文本更复杂，因为 PDF 中的图片可能以不同的格式和编码方式嵌入。iTextSharp 库本身并不直接支持提取图片，但你可以使用其他库如 PdfBox 或自定义方法来达到这一目的。

以下是一个大致的思路，用于从 PDF 中提取图片：

1.  使用 PdfReader 或其他 PDF 解析库来遍历 PDF 文档的页面。
    
2.  对于每个页面，检查其内容流（content stream），查找图像相关的操作符（如`Do`操作符，它引用一个图像 XObject）。
    
3.  提取图像 XObject，并获取其原始数据流。
    
4.  将原始数据流写入到文件中，以保存图像。
    

请注意，这个过程相当复杂，并且需要对 PDF 的内部结构有深入的了解。对于生产环境中的应用程序，建议使用支持提取图像的完整库，如 PdfBox。

PdfBox 是一个 Java 库，但它有. NET 的端口版本，如 PdfBox-NET。你可以使用 PdfBox-NET 来读取 PDF 中的图片。

安装 PdfBox-NET 后，你可以使用类似以下代码来提取图片：

```
// 假设你有一个PdfBox-NET的实例和PDF文档对象PDDocument document = PDDocument.load(new File("path/to/your/pdf/file.pdf"));PDPageTree pages = document.getPages();for (int i = 0; i < pages.getCount(); i++){    PDPage page = pages.get(i);    PDResources resources = page.getResources();        for (COSName xobjectName : resources.getXObjectNames())    {        PDXObject xobject = resources.getXObject(xobjectName);        if (xobject instanceof PDImageXObject)        {            PDImageXObject pdImage = (PDImageXObject) xobject;            ImageIOUtil.writeImage(pdImage, "output-" + i + ".png", 300); // 假设以300dpi输出图片        }    }}document.close();
```

上述代码遍历 PDF 文档的每一页，查找并提取其中的图片，然后将它们保存为 PNG 文件。

总结： 处理 PDF 文档中的文本和图片是一个复杂的过程，需要专门的库和对 PDF 内部结构的理解。在 C# 中，iTextSharp 和 PdfBox-NET 是两个常用的库，可以帮助你完成这些任务。提取文本相对简单，而提取图片则更为复杂。